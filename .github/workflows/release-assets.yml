on:
  release:
    types: [published]

name: release-assets

jobs:
  deploy:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Install Rust
        run: brew install rust
        if: matrix.os == 'macos-latest'
      - name: Build
        run: cargo build --release
      - name: Compress archive
        run: zip onefetch
        working-directory: target/release
      - name: Generate asset name
        run: echo ::set-output name=filename::onefetch_${TAG_NAME#v}_${OS%-latest}_x86_64.zip
        id: generate-name
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
          OS: ${{ matrix.os }}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/onefetch.zip
          asset_name: ${{ steps.generate-name.outputs.filename }}
          asset_content_type: application/zip
